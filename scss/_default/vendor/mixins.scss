//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //
//  ***** ***** *****                                     ***** ***** *****  //
//  ***** ***** *****               MIXINS                ***** ***** *****  //
//  ***** ***** *****                                     ***** ***** *****  //
//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //

//  If you wish, you can install additional mixin libraries, such as Compass
//  or Bourbon into 'global.scss' without worrying about clashes.
//
// [_01_] FONT SIZE
// [_02_] MEDIA QUERIES
// [_03_] POSITIONING
// [_04_] SIZING
// [_05_] TRANSITIONS
// [_06_] GRADIENTS
// [_07_] SVG BACKGROUND IMAGE
// [_08_] RETINA BACKGROUND IMAGE
// [_09_] CLEARFIX (extend)
// [_10_] VERTICAL ALIGN (extend)
// [_11_] ABSOLUTE CENTER (extend)
// [_12_] INLINE-BLOCK FIX


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_01_] FONT SIZE  //

//  Set the font-size in rems with a pixel fallback. Both values are optional
//  and will default to project config settings if left blank. Values must be
//  stated without the unit.
//
//  EXAMPLE: @include font-size(1.6, 1.5);

@mixin font-size($size: $font_base, $line: $size * $line_height){
  font-size:   ($size * 10) + px;
  line-height: ($line * 10) + px;
  font-size:   $size + rem;
  line-height: $line;
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_02_] MEDIA QUERIES  //

//  Write media queries inline using one the four breakpoints specified in the
//  config file. Alternatively write your own media query rule.
//
//  EXAMPLE: @include bp(lap) { ... }

@mixin bp($point) {
  @if      $point == palm      { @media (max-width: $viewport_palm - 1px) { @content; } }
  @else if $point == lap       { @media (min-width: $viewport_palm) { @content; } }
  @else if $point == portable  { @media (min-width: $viewport_lap) { @content; } }
  @else if $point == desk      { @media (min-width: $viewport_desk) { @content; } }
  @else if $point == mac      { @media (min-width: $viewport_mac) { @content; } }
  
  //  for additional breakpoints just state the argument  //
  @else { @media ($point) { @content; } }
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_03_] POSITIONING  //

//  State the position type and arguments all in one line. The position type
//  becomes the mixin name.
//
//  EXAMPLE: @include absolute(top 50% left 50%)

@mixin pos($position, $args) {
  position: $position;
  $offsets: top right bottom left;
  
  @each $o in $offsets {
    $i: index($args, $o);
    
    @if $i
      and $i + 1 <= length($args)
      and type-of( nth($args, $i + 1) ) == number {
      #{$o}: nth($args, $i + 1);
    }
  }
}

@mixin absolute($args) {
  @include pos(absolute, $args);
}

@mixin fixed($args) {
  @include pos(fixed, $args);
}

@mixin relative($args) {
  @include pos(relative, $args);
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_04_] SIZING

//  A tiny mixin for specifying an element's size in one line. Leave the height
//  value out if it is the same as the width.
//
//  EXAMPLE: @include size(80%, 40%);

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_05_] TRANSITIONS

//  Add one or more CSS transitions to an element (not requred if you are using
//  autoprefixer on compile.
//
//  EXAMPLE: @include transition(color 0.3s ease, background 0.4s ease);

@mixin transition($args...) {
  -webkit-transition: $args;
  -o-transition: $args;
  transition: $args;
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //

// [_06_] GRADIENTS

//  Add a simple from colour to colour gradient with your favourite Hex colours.
//
//  EXAMPLE: @include linear-gradient(#000, #da55d0);

@mixin linear-gradient($fromColor, $toColor) {
  background-color: $toColor; /* Fallback Color */
  background-image: -webkit-gradient(linear, left top, left bottom, from($fromColor), to($toColor)); /* Saf4+, Chrome */
  background-image: -webkit-linear-gradient(top, $fromColor, $toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:    -moz-linear-gradient(top, $fromColor, $toColor); /* FF3.6 */
  background-image:     -ms-linear-gradient(top, $fromColor, $toColor); /* IE10 */
  background-image:      -o-linear-gradient(top, $fromColor, $toColor); /* Opera 11.10+ */
  background-image:         linear-gradient(top, $fromColor, $toColor);
  filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,StartColorStr='#{$fromColor}', EndColorStr='#{$toColor}');
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_07_] SVG BACKGROUND IMAGE

//  Add a PNG fallback to SVG background images. Both images must be in the same
//  directory and have the same name. Don't include the image extension.
//
//  EXAMPLE: @include svg(logo, 0, 50%);

@mixin svg($name) {
  background: url('#{$img_dir}#{$name}.png') no-repeat;
  background: url('#{$img_dir}#{$name}.svg') no-repeat, none;
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_08_] RETINA BACKGROUND IMAGE

//  Specify a background for a HD and retina screens. Note that this is not a 
//  fallback, and thus must suppliment the standard background image.
//
//  EXAMPLE: @include image-2x(house@2x.jpg, 100%, 100%);

@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
      (-o-min-device-pixel-ratio: 2.6/2),
      (-webkit-min-device-pixel-ratio: 1.3),
      (min-device-pixel-ratio: 1.3),
      (min-resolution: 1.3dppx) {
    background-image: url('#{$img_dir}#{$image}');
    background-size: $width $height;
  }
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_09_] CLEARFIX (extend)

%cf, %clearfix {
  *zoom: 1;
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after { clear: both; }
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_10_] VERTICAL ALIGN (extend)

%va, %vertical-align {
  position: relative;
  top:50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //


// [_11_] ABSOLUTE CENTER (extend)

%ac, %absolute-center {
  position: absolute;
  top: auto;
  left: auto;
  right: auto;
  bottom: auto;
}


//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //

//  [_12_] INLINE-BLOCK FIX

//  In certain IE versions display:inline-block; does not work as expected.
//  This will fix that issue.
//
//  EXAMPLE: @include inline-block;

@mixin inline-block {
  display: inline-block;
	zoom:1; 
  *display: inline;
}

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //

//  [_13_] WP WYSIWYG GRID FIX

//  The wordpress WYSIWYG editor cannot display comments.
//  This will fix that issue.
//
//  EXAMPLE: @extend %add-comment;

%add-comment {
  @include bp(lap){
    margin-left: -2px;
  }
}

//  ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** ***** *****  //